name: CI

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - master
      - features/**
  pull_request:
  release:
    types:
      - published

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  GITHUB_FEED: https://nuget.pkg.github.com/twsl/index.json
  GITHUB_USER: twsl
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_APIKEY }}
  ATTRIBUTE_NAME: nupkg
  NUGET_OUTPUT_PATH: nuget-package

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/marketplace/actions/use-actions
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          # SDK version to use. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 3.1

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore --verbosity normal

      - name: Test
        run: dotnet test --configuration Release --no-restore --verbosity normal --collect:"XPlat Code Coverage"

      - name: Pack
        run: dotnet pack --configuration Release --no-build --include-symbols --include-source --verbosity normal --output ${{ env.NUGET_OUTPUT_PATH }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ATTRIBUTE_NAME }}
          path: ${{ env.NUGET_OUTPUT_PATH }}

  nightly:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: windows-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ env.ATTRIBUTE_NAME }}

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 3.1
          source-url: ${{ env.GITHUB_FEED }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show artifacts
        run: ls

      #- name: Install gpr
      #  run: dotnet tool install gpr -g
      #- name: nuget push
      #  run: gpr push "*.nupkg" -k ${{ secrets.GITHUB_TOKEN }}

      - name: nuget push
        run: dotnet nuget push "*.nupkg"

      #- name: nuget push
      #  run: |
      #    dotnet nuget add source $GITHUB_FEED -n github -u twsl -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
      #    dotnet nuget push "*.nupkg" --source "github" --skip-duplicate
      #  env:
      #    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLE: false

  publish:
    needs: build
    if: (github.event_name == 'release') || (github.ref == 'refs/tags/*')
    runs-on: windows-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ env.ATTRIBUTE_NAME }}

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 3.1

      - name: nuget push
        run: dotnet nuget push "*.nupkg" -k ${{ secrets.NUGET_APIKEY }} --source ${{ env.NUGET_FEED }}
